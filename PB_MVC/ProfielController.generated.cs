// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MVC.Controllers
{
	public partial class ProfielController
	{
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		protected ProfielController(Dummy d) { }

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		protected RedirectToRouteResult RedirectToAction(ActionResult result)
		{
			var callInfo = result.GetT4MVCResult();
			return RedirectToRoute(callInfo.RouteValueDictionary);
		}

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
		{
			return RedirectToAction(taskResult.Result);
		}

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
		{
			var callInfo = result.GetT4MVCResult();
			return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
		}

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
		{
			return RedirectToActionPermanent(taskResult.Result);
		}


		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public ProfielController Actions { get { return MVC.Profiel; } }
		[GeneratedCode("T4MVC", "2.0")]
		public readonly string Area = "";
		[GeneratedCode("T4MVC", "2.0")]
		public readonly string Name = "Profiel";
		[GeneratedCode("T4MVC", "2.0")]
		public const string NameConst = "Profiel";
		[GeneratedCode("T4MVC", "2.0")]
		static readonly ActionNamesClass s_actions = new ActionNamesClass();
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public ActionNamesClass ActionNames { get { return s_actions; } }
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public class ActionNamesClass
		{
			public readonly string Index = "Index";
			public readonly string ChangeName = "ChangeName";
			public readonly string ChangeEmail = "ChangeEmail";
			public readonly string ChangePassword = "ChangePassword";
			public readonly string DeleteAccount = "DeleteAccount";
			public readonly string AccountDeleted = "AccountDeleted";
		}

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public class ActionNameConstants
		{
			public const string Index = "Index";
			public const string ChangeName = "ChangeName";
			public const string ChangeEmail = "ChangeEmail";
			public const string ChangePassword = "ChangePassword";
			public const string DeleteAccount = "DeleteAccount";
			public const string AccountDeleted = "AccountDeleted";
		}


		static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public class ActionParamsClass_Index
		{
			public readonly string message = "message";
		}
		static readonly ActionParamsClass_ChangeName s_params_ChangeName = new ActionParamsClass_ChangeName();
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public ActionParamsClass_ChangeName ChangeNameParams { get { return s_params_ChangeName; } }
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public class ActionParamsClass_ChangeName
		{
			public readonly string model = "model";
		}
		static readonly ActionParamsClass_ChangeEmail s_params_ChangeEmail = new ActionParamsClass_ChangeEmail();
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public ActionParamsClass_ChangeEmail ChangeEmailParams { get { return s_params_ChangeEmail; } }
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public class ActionParamsClass_ChangeEmail
		{
			public readonly string model = "model";
		}
		static readonly ActionParamsClass_ChangePassword s_params_ChangePassword = new ActionParamsClass_ChangePassword();
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public ActionParamsClass_ChangePassword ChangePasswordParams { get { return s_params_ChangePassword; } }
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public class ActionParamsClass_ChangePassword
		{
			public readonly string model = "model";
		}
		static readonly ActionParamsClass_DeleteAccount s_params_DeleteAccount = new ActionParamsClass_DeleteAccount();
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public ActionParamsClass_DeleteAccount DeleteAccountParams { get { return s_params_DeleteAccount; } }
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public class ActionParamsClass_DeleteAccount
		{
			public readonly string test = "test";
		}
		static readonly ViewsClass s_views = new ViewsClass();
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public ViewsClass Views { get { return s_views; } }
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public class ViewsClass
		{
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AccountDeleted = "AccountDeleted";
                public readonly string ChangeEmail = "ChangeEmail";
                public readonly string ChangeName = "ChangeName";
                public readonly string ChangePassword = "ChangePassword";
                public readonly string DeleteAccount = "DeleteAccount";
                public readonly string Index = "Index";
            }
            public readonly string AccountDeleted = "~/Views/Profiel/AccountDeleted.cshtml";
            public readonly string ChangeEmail = "~/Views/Profiel/ChangeEmail.cshtml";
            public readonly string ChangeName = "~/Views/Profiel/ChangeName.cshtml";
            public readonly string ChangePassword = "~/Views/Profiel/ChangePassword.cshtml";
            public readonly string DeleteAccount = "~/Views/Profiel/DeleteAccount.cshtml";
            public readonly string Index = "~/Views/Profiel/Index.cshtml";
		}
	}

	[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
	public partial class T4MVC_ProfielController : MVC.Controllers.ProfielController
	{
		public T4MVC_ProfielController() : base(Dummy.Instance) { }

		[NonAction]
		partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

		[NonAction]
		public override System.Web.Mvc.ActionResult Index()
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
			IndexOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MVC.Controllers.ProfielController.ManageMessageId? message);

		[NonAction]
		public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Index(MVC.Controllers.ProfielController.ManageMessageId? message)
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
			ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
			IndexOverride(callInfo, message);
			return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
		}

		[NonAction]
		partial void ChangeNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

		[NonAction]
		public override System.Web.Mvc.ActionResult ChangeName()
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeName);
			ChangeNameOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void ChangeNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MVC.Models.ChangeNameViewModel model);

		[NonAction]
		public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ChangeName(MVC.Models.ChangeNameViewModel model)
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeName);
			ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
			ChangeNameOverride(callInfo, model);
			return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
		}

		[NonAction]
		partial void ChangeEmailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

		[NonAction]
		public override System.Web.Mvc.ActionResult ChangeEmail()
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeEmail);
			ChangeEmailOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void ChangeEmailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MVC.Models.ChangeEmailViewModel model);

		[NonAction]
		public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ChangeEmail(MVC.Models.ChangeEmailViewModel model)
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeEmail);
			ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
			ChangeEmailOverride(callInfo, model);
			return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
		}

		[NonAction]
		partial void ChangePasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

		[NonAction]
		public override System.Web.Mvc.ActionResult ChangePassword()
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
			ChangePasswordOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void ChangePasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MVC.Models.ChangePasswordViewModel model);

		[NonAction]
		public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ChangePassword(MVC.Models.ChangePasswordViewModel model)
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
			ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
			ChangePasswordOverride(callInfo, model);
			return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
		}

		[NonAction]
		partial void DeleteAccountOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

		[NonAction]
		public override System.Web.Mvc.ActionResult DeleteAccount()
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteAccount);
			DeleteAccountOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void DeleteAccountOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string test);

		[NonAction]
		public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DeleteAccount(string test)
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteAccount);
			ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "test", test);
			DeleteAccountOverride(callInfo, test);
			return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
		}

		[NonAction]
		partial void AccountDeletedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

		[NonAction]
		public override System.Web.Mvc.ActionResult AccountDeleted()
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AccountDeleted);
			AccountDeletedOverride(callInfo);
			return callInfo;
		}

	}
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
