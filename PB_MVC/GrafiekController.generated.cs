// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MVC.Controllers
{
	public partial class GrafiekController
	{
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public GrafiekController() { }

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		protected GrafiekController(Dummy d) { }

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		protected RedirectToRouteResult RedirectToAction(ActionResult result)
		{
			var callInfo = result.GetT4MVCResult();
			return RedirectToRoute(callInfo.RouteValueDictionary);
		}

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
		{
			return RedirectToAction(taskResult.Result);
		}

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
		{
			var callInfo = result.GetT4MVCResult();
			return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
		}

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
		{
			return RedirectToActionPermanent(taskResult.Result);
		}

		[NonAction]
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public virtual System.Web.Mvc.JsonResult MaakGrafiek1Dataset()
		{
			return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.MaakGrafiek1Dataset);
		}

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public GrafiekController Actions { get { return MVC.Grafiek; } }
		[GeneratedCode("T4MVC", "2.0")]
		public readonly string Area = "";
		[GeneratedCode("T4MVC", "2.0")]
		public readonly string Name = "Grafiek";
		[GeneratedCode("T4MVC", "2.0")]
		public const string NameConst = "Grafiek";
		[GeneratedCode("T4MVC", "2.0")]
		static readonly ActionNamesClass s_actions = new ActionNamesClass();
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public ActionNamesClass ActionNames { get { return s_actions; } }
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public class ActionNamesClass
		{
			public readonly string Index = "Index";
			public readonly string BarChartData = "BarChartData";
			public readonly string DonutPieChartData = "DonutPieChartData";
			public readonly string LineChartData = "LineChartData";
			public readonly string MultiBarChartData = "MultiBarChartData";
			public readonly string MultiDonutChartData = "MultiDonutChartData";
			public readonly string MultiLineChartData = "MultiLineChartData";
			public readonly string BarChartVergelijking = "BarChartVergelijking";
			public readonly string LineChartVergelijking = "LineChartVergelijking";
			public readonly string LineChartAantalTweets = "LineChartAantalTweets";
			public readonly string MaakGrafiek1Dataset = "MaakGrafiek1Dataset";
			public readonly string LaadGrafiekenPartialView = "LaadGrafiekenPartialView";
		}

		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public class ActionNameConstants
		{
			public const string Index = "Index";
			public const string BarChartData = "BarChartData";
			public const string DonutPieChartData = "DonutPieChartData";
			public const string LineChartData = "LineChartData";
			public const string MultiBarChartData = "MultiBarChartData";
			public const string MultiDonutChartData = "MultiDonutChartData";
			public const string MultiLineChartData = "MultiLineChartData";
			public const string BarChartVergelijking = "BarChartVergelijking";
			public const string LineChartVergelijking = "LineChartVergelijking";
			public const string LineChartAantalTweets = "LineChartAantalTweets";
			public const string MaakGrafiek1Dataset = "MaakGrafiek1Dataset";
			public const string LaadGrafiekenPartialView = "LaadGrafiekenPartialView";
		}


		static readonly ActionParamsClass_MaakGrafiek1Dataset s_params_MaakGrafiek1Dataset = new ActionParamsClass_MaakGrafiek1Dataset();
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public ActionParamsClass_MaakGrafiek1Dataset MaakGrafiek1DatasetParams { get { return s_params_MaakGrafiek1Dataset; } }
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public class ActionParamsClass_MaakGrafiek1Dataset
		{
			public readonly string labels = "labels";
			public readonly string data = "data";
			public readonly string backgroundcolor = "backgroundcolor";
			public readonly string bordercolor = "bordercolor";
		}
		static readonly ViewsClass s_views = new ViewsClass();
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public ViewsClass Views { get { return s_views; } }
		[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
		public class ViewsClass
		{
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
            }
            public readonly string Index = "~/Views/Grafiek/Index.cshtml";
		}
	}

	[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
	public partial class T4MVC_GrafiekController : MVC.Controllers.GrafiekController
	{
		public T4MVC_GrafiekController() : base(Dummy.Instance) { }

		[NonAction]
		partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

		[NonAction]
		public override System.Web.Mvc.ActionResult Index()
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
			IndexOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void BarChartDataOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

		[NonAction]
		public override System.Web.Mvc.JsonResult BarChartData()
		{
			var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.BarChartData);
			BarChartDataOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void DonutPieChartDataOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

		[NonAction]
		public override System.Web.Mvc.JsonResult DonutPieChartData()
		{
			var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DonutPieChartData);
			DonutPieChartDataOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void LineChartDataOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

		[NonAction]
		public override System.Web.Mvc.JsonResult LineChartData()
		{
			var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LineChartData);
			LineChartDataOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void MultiBarChartDataOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

		[NonAction]
		public override System.Web.Mvc.JsonResult MultiBarChartData()
		{
			var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.MultiBarChartData);
			MultiBarChartDataOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void MultiDonutChartDataOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

		[NonAction]
		public override System.Web.Mvc.JsonResult MultiDonutChartData()
		{
			var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.MultiDonutChartData);
			MultiDonutChartDataOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void MultiLineChartDataOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

		[NonAction]
		public override System.Web.Mvc.JsonResult MultiLineChartData()
		{
			var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.MultiLineChartData);
			MultiLineChartDataOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void BarChartVergelijkingOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

		[NonAction]
		public override System.Web.Mvc.JsonResult BarChartVergelijking()
		{
			var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.BarChartVergelijking);
			BarChartVergelijkingOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void LineChartVergelijkingOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

		[NonAction]
		public override System.Web.Mvc.JsonResult LineChartVergelijking()
		{
			var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LineChartVergelijking);
			LineChartVergelijkingOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void LineChartAantalTweetsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

		[NonAction]
		public override System.Web.Mvc.JsonResult LineChartAantalTweets()
		{
			var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LineChartAantalTweets);
			LineChartAantalTweetsOverride(callInfo);
			return callInfo;
		}

		[NonAction]
		partial void MaakGrafiek1DatasetOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string[] labels, int[] data, string[] backgroundcolor, string[] bordercolor);

		[NonAction]
		public override System.Web.Mvc.JsonResult MaakGrafiek1Dataset(string[] labels, int[] data, string[] backgroundcolor, string[] bordercolor)
		{
			var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.MaakGrafiek1Dataset);
			ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "labels", labels);
			ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
			ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "backgroundcolor", backgroundcolor);
			ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "bordercolor", bordercolor);
			MaakGrafiek1DatasetOverride(callInfo, labels, data, backgroundcolor, bordercolor);
			return callInfo;
		}

		[NonAction]
		partial void LaadGrafiekenPartialViewOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

		[NonAction]
		public override System.Web.Mvc.ActionResult LaadGrafiekenPartialView()
		{
			var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LaadGrafiekenPartialView);
			LaadGrafiekenPartialViewOverride(callInfo);
			return callInfo;
		}

	}
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
